#summary Configuring Mod_Auth_External

There are three parts to doing the configuration.  First, if you are using
dynamic loading, you need to configure Apache to load the `mod_authnz_external`
module.  If '`apxs`' is working correctly, it should do this for you
automatically, but it doesn't always.

Second you define the external program and communication method to use in
your `httpd.conf` file, identifying them with a keyword.

Finally you set up specific directories to use that authenticator, referencing
it by keyword.

These instructions talk about editing the "`httpd.conf`" file, as it appears in
the standard Apache distributions.  In many version of Linux, however, this
file will actually just include a lot of other configuration files, some of
which may be automatically generated by various GUI configuration tools.  I
include notes on some of these variations that I have encountered, but you
may need to do some of your own figuring to find out how to adapt these
instructions to your server configuration.

== 1.  Getting the Module Loaded ==

This step is not required if you are using static loading.  Even if you are doing dynamic loading, `apxs` should have set up everything correctly for you.  If you are trustful, you can skip ahead to step 2 and only come back to this if things don't seem to be working.  In cases where you are using multiple non-authoritative authenticators you'll probably want to check this manually, even if apxs works right, to ensure that the modules are loaded (and thus envoked) in the desired order.

 # First, you should make sure that there is a proper "`LoadModule`" command in the httpd.conf file.  This should have been put there by '`apxs`' but, some older Linux distributions, like Redhat 6.1, messed it up.  Basically, the 'LoadModule' command should look a lot like all the other LoadModule commands you'll find there.  Something like
{{{
LoadModule authnz_external_module modules/mod_authnz_external.so
}}}
 where the second part is the path from Apache's root directory to the location where the module was stored by `apxs`.

  Make sure that apxs didn't put this directive inside any inappropriate `<IfDefine>` directives, as some Redhat versions have done in the past.

 If you previously had `mod_authnz_external` or `mod_auth_external` installed and are installing a new version, you may have more than one LoadModule command in `httpd.conf`.  You only need one.  Get rid of the old ones.

*THIS PAGE IS INCOMPLETE *